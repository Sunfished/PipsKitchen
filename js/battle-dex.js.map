{"version":3,"sources":["../src/battle-dex.ts"],"names":["window","global","exports","nodewebkit","process","versions","toID","text","id","userid","toLowerCase","replace","toUserid","PSUtils","splitFirst","str","delimiter","limit","splitStr","length","delimiterIndex","indexOf","push","slice","compare","a","b","localeCompare","Array","isArray","i","comparison","reverse","Error","sortBy","array","callback","sort","toRoomid","roomid","toName","name","trim","substr","Dex","gen","modid","cache","statNames","statNamesExceptHP","pokeballs","modResourcePrefix","resourcePrefix","prefix","document","location","protocol","fxPrefix","Replays","loadedSpriteData","xy","bw","moddedDexes","mod","BattleTeambuilderTable","ModdedDex","forGen","resolveAvatar","avatar","BattleAvatarNumbers","charAt","includes","Config","server","registered","port","host","encodeURIComponent","sanitizeName","prefs","prop","Storage","getShortName","shortName","getEffect","getItem","getAbility","getMove","PureEffect","nameOrMove","BattleAliases","BattleMovedex","data","exists","exec","hpWithType","hpPower","basePower","Number","move","Move","getGen3Category","type","nameOrItem","BattleItems","item","Item","nameOrAbility","BattleAbilities","ability","Ability","getSpecies","nameOrSpecies","modded","debug","formid","BattlePokedexAltForms","BattlePokedex","BattleBaseSpeciesChart","baseSpeciesId","startsWith","species","tier","baseSpecies","Species","cosmeticFormes","forme","baseForme","otherFormes","getTier","pokemon","genNum","undefined","table","overrideTier","getType","toUpperCase","BattleTypeChart","damageTaken","effectType","hasAbility","abilities","getSpriteMod","folder","overrideStandard","ModSprites","modName","loadSpriteData","path","$","attr","qs","split","match","el","createElement","src","getElementsByTagName","appendChild","getSpriteData","isFront","options","mechanicsGen","ModConfig","spriteGen","isDynamax","dynamax","Pokemon","volatiles","transform","shiny","gender","getSpeciesForme","spriteDir","fakeSprite","spriteid","endsWith","spriteData","w","h","y","url","pixelated","isFrontSprite","reverseFrontSprite","cryurl","dir","facing","graphicsGen","Math","max","min","baseDir","animationData","miscData","speciesid","isTotem","BattlePokemonSprites","BattlePokemonSpritesBW","num","baseSpeciesid","formeid","isMega","afd","noScale","allowAnim","getPokemonIconNum","isFemale","facingLeft","BattlePokemonIconIndexes","BattlePokemonIconIndexesLeft","getPokemonIcon","speciesForme","formechange","top","floor","left","fainted","getTeambuilderSpriteData","x","xydexExists","isNonstandard","getTeambuilderSprite","getItemIcon","spritenum","getTypeIcon","sanitizedType","getCategoryIcon","category","categoryID","sanitizedCategory","getPokeballs","Object","values","isPokeball","Moves","Items","Abilities","Types","parseInt","overrideMoveInfo","key","hasOwnProperty","fullItemName","overrideItemDesc","shortDesc","fullAbilityName","overrideAbilityDesc","hasData","overrideDexInfo","removeType","overrideTypeChart","require"],"mappings":"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","sourcesContent":["/**\r\n * Pokemon Showdown Dex\r\n *\r\n * Roughly equivalent to sim/dex.js in a Pokemon Showdown server, but\r\n * designed for use in browsers rather than in Node.\r\n *\r\n * This is a generic utility library for Pokemon Showdown code: any\r\n * code shared between the replay viewer and the client usually ends up\r\n * here.\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Compiled into battledata.js which includes all dependencies\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\ndeclare var require: any;\r\ndeclare var global: any;\r\n\r\nif (typeof window === 'undefined') {\r\n\t// Node\r\n\t(global as any).window = global;\r\n} else {\r\n\t// browser (possibly NW.js!)\r\n\twindow.exports = window;\r\n}\r\n\r\n// @ts-ignore\r\nwindow.nodewebkit = !!(typeof process !== 'undefined' && process.versions && process.versions['node-webkit']);\r\n\r\nfunction toID(text: any) {\r\n\tif (text?.id) {\r\n\t\ttext = text.id;\r\n\t} else if (text?.userid) {\r\n\t\ttext = text.userid;\r\n\t}\r\n\tif (typeof text !== 'string' && typeof text !== 'number') return '' as ID;\r\n\treturn ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\r\n}\r\n\r\nfunction toUserid(text: any) {\r\n\treturn toID(text);\r\n}\r\n\r\ntype Comparable = number | string | boolean | Comparable[] | {reverse: Comparable};\r\nconst PSUtils = new class {\r\n\t/**\r\n\t * Like string.split(delimiter), but only recognizes the first `limit`\r\n\t * delimiters (default 1).\r\n\t *\r\n\t * `\"1 2 3 4\".split(\" \", 2) => [\"1\", \"2\"]`\r\n\t *\r\n\t * `splitFirst(\"1 2 3 4\", \" \", 1) => [\"1\", \"2 3 4\"]`\r\n\t *\r\n\t * Returns an array of length exactly limit + 1.\r\n\t */\r\n\tsplitFirst(str: string, delimiter: string, limit: number = 1) {\r\n\t\tlet splitStr: string[] = [];\r\n\t\twhile (splitStr.length < limit) {\r\n\t\t\tlet delimiterIndex = str.indexOf(delimiter);\r\n\t\t\tif (delimiterIndex >= 0) {\r\n\t\t\t\tsplitStr.push(str.slice(0, delimiterIndex));\r\n\t\t\t\tstr = str.slice(delimiterIndex + delimiter.length);\r\n\t\t\t} else {\r\n\t\t\t\tsplitStr.push(str);\r\n\t\t\t\tstr = '';\r\n\t\t\t}\r\n\t\t}\r\n\t\tsplitStr.push(str);\r\n\t\treturn splitStr;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares two variables; intended to be used as a smarter comparator.\r\n\t * The two variables must be the same type (TypeScript will not check this).\r\n\t *\r\n\t * - Numbers are sorted low-to-high, use `-val` to reverse\r\n\t * - Strings are sorted A to Z case-semi-insensitively, use `{reverse: val}` to reverse\r\n\t * - Booleans are sorted true-first (REVERSE of casting to numbers), use `!val` to reverse\r\n\t * - Arrays are sorted lexically in the order of their elements\r\n\t *\r\n\t * In other words: `[num, str]` will be sorted A to Z, `[num, {reverse: str}]` will be sorted Z to A.\r\n\t */\r\n\tcompare(a: Comparable, b: Comparable): number {\r\n\t\tif (typeof a === 'number') {\r\n\t\t\treturn a - (b as number);\r\n\t\t}\r\n\t\tif (typeof a === 'string') {\r\n\t\t\treturn a.localeCompare(b as string);\r\n\t\t}\r\n\t\tif (typeof a === 'boolean') {\r\n\t\t\treturn (a ? 1 : 2) - (b ? 1 : 2);\r\n\t\t}\r\n\t\tif (Array.isArray(a)) {\r\n\t\t\tfor (let i = 0; i < a.length; i++) {\r\n\t\t\t\tconst comparison = PSUtils.compare(a[i], (b as Comparable[])[i]);\r\n\t\t\t\tif (comparison) return comparison;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (a.reverse) {\r\n\t\t\treturn PSUtils.compare((b as {reverse: string}).reverse, a.reverse);\r\n\t\t}\r\n\t\tthrow new Error(`Passed value ${a} is not comparable`);\r\n\t}\r\n\t/**\r\n\t * Sorts an array according to the callback's output on its elements.\r\n\t *\r\n\t * The callback's output is compared according to `PSUtils.compare` (in\r\n\t * particular, it supports arrays so you can sort by multiple things).\r\n\t */\r\n\tsortBy<T>(array: T[], callback: (a: T) => Comparable): T[];\r\n\t/**\r\n\t * Sorts an array according to `PSUtils.compare`. (Correctly sorts numbers,\r\n\t * unlike `array.sort`)\r\n\t */\r\n\tsortBy<T extends Comparable>(array: T[]): T[];\r\n\tsortBy<T>(array: T[], callback?: (a: T) => Comparable) {\r\n\t\tif (!callback) return (array as any[]).sort(PSUtils.compare);\r\n\t\treturn array.sort((a, b) => PSUtils.compare(callback(a), callback(b)));\r\n\t}\r\n};\r\n\r\n/**\r\n * Sanitize a room ID by removing anything that isn't alphanumeric or `-`.\r\n * Shouldn't actually do anything except against malicious input.\r\n */\r\nfunction toRoomid(roomid: string) {\r\n\treturn roomid.replace(/[^a-zA-Z0-9-]+/g, '').toLowerCase();\r\n}\r\n\r\nfunction toName(name: any) {\r\n\tif (typeof name !== 'string' && typeof name !== 'number') return '';\r\n\tname = ('' + name).replace(/[\\|\\s\\[\\]\\,\\u202e]+/g, ' ').trim();\r\n\tif (name.length > 18) name = name.substr(0, 18).trim();\r\n\r\n\t// remove zalgo\r\n\tname = name.replace(\r\n\t\t/[\\u0300-\\u036f\\u0483-\\u0489\\u0610-\\u0615\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06ED\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E]{3,}/g,\r\n\t\t''\r\n\t);\r\n\tname = name.replace(/[\\u239b-\\u23b9]/g, '');\r\n\r\n\treturn name;\r\n}\r\n\r\ninterface SpriteData {\r\n\tw: number;\r\n\th: number;\r\n\ty?: number;\r\n\tgen?: number;\r\n\turl?: string;\r\n\trawHTML?: string;\r\n\tpixelated?: boolean;\r\n\tisFrontSprite?: boolean;\r\n\tcryurl?: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\ninterface TeambuilderSpriteData {\r\n\tx: number;\r\n\ty: number;\r\n\tspriteDir: string;\r\n\tspriteid: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\nconst Dex = new class implements ModdedDex {\r\n\treadonly gen = 8;\r\n\treadonly modid = 'gen8' as ID;\r\n\treadonly cache = null!;\r\n\r\n\treadonly statNames: ReadonlyArray<StatName> = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\r\n\treadonly statNamesExceptHP: ReadonlyArray<StatNameExceptHP> = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\r\n\tpokeballs: string[] | null = null;\r\n\r\n\treadonly modResourcePrefix = 'https://raw.githubusercontent.com/Sunfished/PipsBasement/master/data/mods/';\r\n\tresourcePrefix = (() => {\r\n\t\tlet prefix = '';\r\n\t\tif (window.document?.location?.protocol !== 'http:') prefix = 'https:';\r\n\t\treturn `${prefix}//${'play.pokemonshowdown.com'}/`;\r\n\t})();\r\n\r\n\tfxPrefix = (() => {\r\n\t\tif (window.document?.location?.protocol === 'file:') {\r\n\t\t\tif (window.Replays) return `https://${'play.pokemonshowdown.com'}/fx/`;\r\n\t\t\treturn `fx/`;\r\n\t\t}\r\n\t\treturn `//${'play.pokemonshowdown.com'}/fx/`;\r\n\t})();\r\n\r\n\tloadedSpriteData = {xy: 1, bw: 0};\r\n\tmoddedDexes: {[mod: string]: ModdedDex} = {};\r\n\r\n\tmod(modid: ID): ModdedDex {\r\n\t\tif (modid === 'gen8') return this;\r\n\t\tif (!window.BattleTeambuilderTable) return this;\r\n\t\tif (modid in this.moddedDexes) {\r\n\t\t\treturn this.moddedDexes[modid];\r\n\t\t}\r\n\t\tthis.moddedDexes[modid] = new ModdedDex(modid);\r\n\t\treturn this.moddedDexes[modid];\r\n\t}\r\n\tforGen(gen: number) {\r\n\t\tif (!gen) return this;\r\n\t\treturn this.mod(`gen${gen}` as ID);\r\n\t}\r\n\r\n\tresolveAvatar(avatar: string): string {\r\n\t\tif (window.BattleAvatarNumbers && avatar in BattleAvatarNumbers) {\r\n\t\t\tavatar = BattleAvatarNumbers[avatar];\r\n\t\t}\r\n\t\tif (avatar.charAt(0) === '#') {\r\n\t\t\treturn Dex.resourcePrefix + 'sprites/trainers-custom/' + toID(avatar.substr(1)) + '.png';\r\n\t\t}\r\n\t\tif (avatar.includes('.') && window.Config?.server?.registered) {\r\n\t\t\t// custom avatar served by the server\r\n\t\t\tlet protocol = (Config.server.port === 443) ? 'https' : 'http';\r\n\t\t\treturn protocol + '://' + Config.server.host + ':' + Config.server.port +\r\n\t\t\t\t'/avatars/' + encodeURIComponent(avatar).replace(/\\%3F/g, '?');\r\n\t\t}\r\n\t\treturn Dex.resourcePrefix + 'sprites/trainers/' + Dex.sanitizeName(avatar || 'unknown') + '.png';\r\n\t}\r\n\r\n\t/**\r\n\t * This is used to sanitize strings from data files like `moves.js` and\r\n\t * `teambuilder-tables.js`.\r\n\t *\r\n\t * This makes sure untrusted strings can't wreak havoc if someone forgets to\r\n\t * escape it before putting it in HTML.\r\n\t *\r\n\t * None of these characters belong in these files, anyway. (They can be used\r\n\t * in move descriptions, but those are served from `text.js`, which are\r\n\t * definitely always treated as unsanitized.)\r\n\t */\r\n\tsanitizeName(name: any) {\r\n\t\tif (!name) return '';\r\n\t\treturn ('' + name)\r\n\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')\r\n\t\t\t.slice(0, 50);\r\n\t}\r\n\r\n\tprefs(prop: string) {\r\n\t\t// @ts-ignore\r\n\t\treturn window.Storage?.prefs?.(prop);\r\n\t}\r\n\r\n\tgetShortName(name: string) {\r\n\t\tlet shortName = name.replace(/[^A-Za-z0-9]+$/, '');\r\n\t\tif (shortName.indexOf('(') >= 0) {\r\n\t\t\tshortName += name.slice(shortName.length).replace(/[^\\(\\)]+/g, '').replace(/\\(\\)/g, '');\r\n\t\t}\r\n\t\treturn shortName;\r\n\t}\r\n\r\n\tgetEffect(name: string | null | undefined): PureEffect | Item | Ability | Move {\r\n\t\tname = (name || '').trim();\r\n\t\tif (name.substr(0, 5) === 'item:') {\r\n\t\t\treturn Dex.getItem(name.substr(5).trim());\r\n\t\t} else if (name.substr(0, 8) === 'ability:') {\r\n\t\t\treturn Dex.getAbility(name.substr(8).trim());\r\n\t\t} else if (name.substr(0, 5) === 'move:') {\r\n\t\t\treturn Dex.getMove(name.substr(5).trim());\r\n\t\t}\r\n\t\tlet id = toID(name);\r\n\t\treturn new PureEffect(id, name);\r\n\t}\r\n\r\n\tgetMove(nameOrMove: string | Move | null | undefined): Move {\r\n\t\tif (nameOrMove && typeof nameOrMove !== 'string') {\r\n\t\t\t// TODO: don't accept Moves here\r\n\t\t\treturn nameOrMove;\r\n\t\t}\r\n\t\tlet name = nameOrMove || '';\r\n\t\tlet id = toID(nameOrMove);\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t}\r\n\t\tif (!window.BattleMovedex) window.BattleMovedex = {};\r\n\t\tlet data = window.BattleMovedex[id];\r\n\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\r\n\t\tif (!data && id.substr(0, 11) === 'hiddenpower' && id.length > 11) {\r\n\t\t\tlet [, hpWithType, hpPower] = /([a-z]*)([0-9]*)/.exec(id)!;\r\n\t\t\tdata = {\r\n\t\t\t\t...(window.BattleMovedex[hpWithType] || {}),\r\n\t\t\t\tbasePower: Number(hpPower) || 60,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (!data && id.substr(0, 6) === 'return' && id.length > 6) {\r\n\t\t\tdata = {\r\n\t\t\t\t...(window.BattleMovedex['return'] || {}),\r\n\t\t\t\tbasePower: Number(id.slice(6)),\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (!data && id.substr(0, 11) === 'frustration' && id.length > 11) {\r\n\t\t\tdata = {\r\n\t\t\t\t...(window.BattleMovedex['frustration'] || {}),\r\n\t\t\t\tbasePower: Number(id.slice(11)),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (!data) data = {exists: false};\r\n\t\tlet move = new Move(id, name, data);\r\n\t\twindow.BattleMovedex[id] = move;\r\n\t\treturn move;\r\n\t}\r\n\r\n\tgetGen3Category(type: string) {\r\n\t\treturn [\r\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon',\r\n\t\t].includes(type) ? 'Special' : 'Physical';\r\n\t}\r\n\r\n\tgetItem(nameOrItem: string | Item | null | undefined): Item {\r\n\t\tif (nameOrItem && typeof nameOrItem !== 'string') {\r\n\t\t\t// TODO: don't accept Items here\r\n\t\t\treturn nameOrItem;\r\n\t\t}\r\n\t\tlet name = nameOrItem || '';\r\n\t\tlet id = toID(nameOrItem);\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t}\r\n\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\tlet data = window.BattleItems[id];\r\n\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\tif (!data) data = {exists: false};\r\n\t\tlet item = new Item(id, name, data);\r\n\t\twindow.BattleItems[id] = item;\r\n\t\treturn item;\r\n\t}\r\n\r\n\tgetAbility(nameOrAbility: string | Ability | null | undefined): Ability {\r\n\t\tif (nameOrAbility && typeof nameOrAbility !== 'string') {\r\n\t\t\t// TODO: don't accept Abilities here\r\n\t\t\treturn nameOrAbility;\r\n\t\t}\r\n\t\tlet name = nameOrAbility || '';\r\n\t\tlet id = toID(nameOrAbility);\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t}\r\n\t\tif (!window.BattleAbilities) window.BattleAbilities = {};\r\n\t\tlet data = window.BattleAbilities[id];\r\n\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\tif (!data) data = {exists: false};\r\n\t\tlet ability = new Ability(id, name, data);\r\n\t\twindow.BattleAbilities[id] = ability;\r\n\t\treturn ability;\r\n\t}\r\n\r\n\tgetSpecies(nameOrSpecies: string | Species | null | undefined, modded = false, debug = \"\"): Species {\r\n\t\tif (nameOrSpecies && typeof nameOrSpecies !== 'string') {\r\n\t\t\t// TODO: don't accept Species' here\r\n\t\t\treturn nameOrSpecies;\r\n\t\t}\r\n\t\tlet name = nameOrSpecies || '';\r\n\t\tlet id = toID(nameOrSpecies);\r\n\t\tlet formid = id;\r\n\t\t// if (debug) console.log(\"getSpecies (Dex): \" + debug + ' ' + id);\r\n\t\tif (!window.BattlePokedexAltForms) window.BattlePokedexAltForms = {};\r\n\t\tif (formid in window.BattlePokedexAltForms) {\r\n\t\t\treturn window.BattlePokedexAltForms[formid];\r\n\t\t}\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t} else if (window.BattlePokedex && !(id in BattlePokedex) && window.BattleBaseSpeciesChart) {\r\n\t\t\tfor (const baseSpeciesId of BattleBaseSpeciesChart) {\r\n\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\r\n\t\t\t\t\tid = baseSpeciesId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!window.BattlePokedex) window.BattlePokedex = {};\r\n\t\tlet data = window.BattlePokedex[id];\r\n\t\tlet species: Species;\r\n\t\tif (data && typeof data.exists === 'boolean') {\r\n\t\t\tspecies = data;\r\n\t\t} else {\r\n\t\t\tif (!data) data = {exists: false};\r\n\t\t\tif (!data.tier && id.slice(-5) === 'totem') {\r\n\t\t\t\tdata.tier = this.getSpecies(id.slice(0, -5)).tier;\r\n\t\t\t}\r\n\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\tdata.tier = this.getSpecies(data.baseSpecies).tier;\r\n\t\t\t}\r\n\t\t\tspecies = new Species(id, name, data);\r\n\t\t\twindow.BattlePokedex[id] = species;\r\n\t\t}\r\n\r\n\t\tif (species.cosmeticFormes) {\r\n\t\t\tfor (const forme of species.cosmeticFormes) {\r\n\t\t\t\tif (toID(forme) === formid) {\r\n\t\t\t\t\tspecies = new Species(formid, name, {\r\n\t\t\t\t\t\t...species,\r\n\t\t\t\t\t\tname: forme,\r\n\t\t\t\t\t\tforme: forme.slice(species.name.length + 1),\r\n\t\t\t\t\t\tbaseForme: \"\",\r\n\t\t\t\t\t\tbaseSpecies: species.name,\r\n\t\t\t\t\t\totherFormes: null,\r\n\t\t\t\t\t});\r\n\t\t\t\t\twindow.BattlePokedexAltForms[formid] = species;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn species;\r\n\t}\r\n\r\n\t/** @deprecated */\r\n\tgetTier(pokemon: string, genNum = 8, mod?: string): string {\r\n\t\tlet species = this.getSpecies(pokemon,undefined,\"from getTier\");\r\n\t\tif (genNum < 8) species = this.forGen(genNum).getSpecies(pokemon);\r\n\t\tlet table = window.BattleTeambuilderTable;\r\n\t\tif (!table) return species.tier;\r\n\t\tif (mod === 'doubles') {\r\n\t\t\ttable = table[`gen${genNum}doubles`];\r\n\t\t} else if (genNum < 8) {\r\n\t\t\ttable = table[`gen${genNum}`];\r\n\t\t} else if (mod && table[toID(mod)]) {\r\n\t\t\ttable = table[toID(mod)];\r\n\t\t}\r\n\r\n\t\tif (!table.overrideTier) return species.tier;\r\n\r\n\t\tlet id = species.id;\r\n\t\tif (id in table.overrideTier) {\r\n\t\t\treturn table.overrideTier[id];\r\n\t\t}\r\n\r\n\t\treturn species.tier;\r\n\t}\r\n\r\n\tgetType(type: any): Effect & {damageTaken?: AnyObject, HPivs?: Partial<StatsTable>, HPdvs: Partial<StatsTable>} {\r\n\t\tif (!type || typeof type === 'string') {\r\n\t\t\tlet id = toID(type) as string;\r\n\t\t\tid = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\t\t\ttype = (window.BattleTypeChart && window.BattleTypeChart[id]) || {};\r\n\t\t\tif (type.damageTaken) type.exists = true;\r\n\t\t\tif (!type.id) type.id = id;\r\n\t\t\tif (!type.name) type.name = id;\r\n\t\t\tif (!type.effectType) {\r\n\t\t\t\ttype.effectType = 'Type';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn type;\r\n\t}\r\n\r\n\thasAbility(species: Species, ability: string) {\r\n\t\tfor (const i in species.abilities) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (ability === species.abilities[i]) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetSpriteMod(mod: string, id: string, folder: string, overrideStandard: boolean = false) {\r\n\t\tif (!window.ModSprites[id]) return '';\r\n\t\tif ((!mod || !window.ModSprites[id][mod]) && !overrideStandard) {\r\n\t\t\tfor (const modName in window.ModSprites[id]) {\r\n\t\t\t\tif (window.ModSprites[id][modName].includes(folder)) return modName;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (mod && window.ModSprites[id][mod] && window.ModSprites[id][mod].includes(folder)) return mod;\r\n\t\treturn '';\r\n\t}\r\n\r\n\tloadSpriteData(gen: 'xy' | 'bw') {\r\n\t\tif (this.loadedSpriteData[gen]) return;\r\n\t\tthis.loadedSpriteData[gen] = 1;\r\n\r\n\t\tlet path = $('script[src*=\"pokedex-mini.js\"]').attr('src') || '';\r\n\t\tlet qs = '?' + (path.split('?')[1] || '');\r\n\t\tpath = (path.match(/.+?(?=data\\/pokedex-mini\\.js)/) || [])[0] || '';\r\n\r\n\t\tlet el = document.createElement('script');\r\n\t\tel.src = path + 'data/pokedex-mini-bw.js' + qs;\r\n\t\tdocument.getElementsByTagName('body')[0].appendChild(el);\r\n\t}\r\n\r\n\tgetSpriteData(pokemon: Pokemon | Species | string, isFront: boolean, options: {\r\n\t\tgen?: number,\r\n\t\tshiny?: boolean,\r\n\t\tgender?: GenderName,\r\n\t\tafd?: boolean,\r\n\t\tnoScale?: boolean,\r\n\t\tmod: string,\r\n\t\tdynamax?: boolean,\r\n\t} = {gen: 6, mod: ''}) {\r\n\t\tlet mechanicsGen = options.gen || 6;\r\n\t\tif (options.mod && window.ModConfig[options.mod].spriteGen) mechanicsGen = window.ModConfig[options.mod].spriteGen;\r\n\t\tlet isDynamax = !!options.dynamax;\r\n\t\tif (pokemon instanceof Pokemon) {\r\n\t\t\tif (pokemon.volatiles.transform) {\r\n\t\t\t\toptions.shiny = pokemon.volatiles.transform[2];\r\n\t\t\t\toptions.gender = pokemon.volatiles.transform[3];\r\n\t\t\t} else {\r\n\t\t\t\toptions.shiny = pokemon.shiny;\r\n\t\t\t\toptions.gender = pokemon.gender;\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles.dynamax) isDynamax = true;\r\n\t\t\tpokemon = pokemon.getSpeciesForme();\r\n\t\t}\r\n\t\tconst species = Dex.getSpecies(pokemon);\r\n\t\tlet resourcePrefix = Dex.resourcePrefix;\r\n\t\tlet spriteDir = 'sprites/';\r\n\t\tlet fakeSprite = false;\r\n\t\tlet name = species.spriteid;\r\n\t\tlet id = toID(name);\r\n\t\toptions.mod = this.getSpriteMod(options.mod, id, isFront ? 'front' : 'back', species.exists !== false);\r\n\t\tif (options.mod) {\r\n\t\t\tresourcePrefix = Dex.modResourcePrefix;\r\n\t\t\tspriteDir = `${options.mod}/sprites/`;\r\n\t\t\tfakeSprite = true;\r\n\t\t\tif (this.getSpriteMod(options.mod, id, (isFront ? 'front' : 'back') + '-shiny', species.exists !== false) === '') {\r\n\t\t\t\toptions.shiny = false;\r\n\t\t\t}\r\n\t\t} \r\n\r\n\t\t// Gmax sprites are already extremely large, so we don't need to double.\r\n\t\tif (species.name.endsWith('-Gmax')) isDynamax = false;\r\n\t\tlet spriteData = {\r\n\t\t\tgen: mechanicsGen,\r\n\t\t\tw: 96,\r\n\t\t\th: 96,\r\n\t\t\ty: 0,\r\n\t\t\turl: resourcePrefix + spriteDir,\r\n\t\t\tpixelated: true,\r\n\t\t\tisFrontSprite: false,\r\n\t\t\treverseFrontSprite: false,\r\n\t\t\tcryurl: '',\r\n\t\t\tshiny: options.shiny,\r\n\t\t};\r\n\t\t// console.log(spriteData.url);\r\n\t\tif (options.mod === '' && !isFront && this.getSpriteMod(options.mod, id, 'front', species.exists !== false) !== '') {\r\n\t\t\toptions.mod = this.getSpriteMod(options.mod, id, 'front', species.exists !== false);\r\n\t\t\tspriteData.reverseFrontSprite = true;\r\n\t\t}\r\n\t\t\r\n\t\tlet dir;\r\n\t\tlet facing;\r\n\t\tif (isFront) {\r\n\t\t\tspriteData.isFrontSprite = true;\r\n\t\t\tdir = '';\r\n\t\t\tfacing = 'front';\r\n\t\t} else {\r\n\t\t\tdir = '-back';\r\n\t\t\tfacing = 'back';\r\n\t\t}\r\n\t\tif (fakeSprite) dir = isFront ? 'front' : 'back';\r\n\t\t// Decide which gen sprites to use.\r\n\t\t//\r\n\t\t// There are several different generations we care about here:\r\n\t\t//\r\n\t\t//   - mechanicsGen: the generation number of the mechanics and battle (options.gen)\r\n\t\t//   - graphicsGen: the generation number of sprite/field graphics the user has requested.\r\n\t\t//     This will default to mechanicsGen, but may be altered depending on user preferences.\r\n\t\t//   - spriteData.gen: the generation number of a the specific Pokemon sprite in question.\r\n\t\t//     This defaults to graphicsGen, but if the graphicsGen doesn't have a sprite for the Pokemon\r\n\t\t//     (eg. Darmanitan in graphicsGen 2) then we go up gens until it exists.\r\n\t\t//\r\n\t\tlet graphicsGen = mechanicsGen;\r\n\t\tif (Dex.prefs('nopastgens')) graphicsGen = 6;\r\n\t\tif (Dex.prefs('bwgfx') && graphicsGen >= 6) graphicsGen = 5;\r\n\t\tspriteData.gen = Math.max(graphicsGen, Math.min(species.gen, 5));\r\n\t\tconst baseDir = ['', 'gen1', 'gen2', 'gen3', 'gen4', 'gen5', '', '', ''][spriteData.gen];\r\n\r\n\t\tlet animationData = null;\r\n\t\tlet miscData = null;\r\n\t\tlet speciesid = species.id;\r\n\t\tif (species.isTotem) speciesid = toID(name);\r\n\t\tif (baseDir === '' && window.BattlePokemonSprites) {\r\n\t\t\tanimationData = BattlePokemonSprites[speciesid];\r\n\t\t}\r\n\t\tif (baseDir === 'gen5' && window.BattlePokemonSpritesBW) {\r\n\t\t\tanimationData = BattlePokemonSpritesBW[speciesid];\r\n\t\t}\r\n\t\tif (window.BattlePokemonSprites) miscData = BattlePokemonSprites[speciesid];\r\n\t\tif (!miscData && window.BattlePokemonSpritesBW) miscData = BattlePokemonSpritesBW[speciesid];\r\n\t\tif (!animationData) animationData = {};\r\n\t\tif (!miscData) miscData = {};\r\n\r\n\t\tif (miscData.num !== 0 && miscData.num > -5000) {\r\n\t\t\tlet baseSpeciesid = toID(species.baseSpecies);\r\n\t\t\tspriteData.cryurl = 'audio/cries/' + baseSpeciesid;\r\n\t\t\tlet formeid = species.formeid;\r\n\t\t\tif (species.isMega || formeid && (\r\n\t\t\t\tformeid === '-sky' ||\r\n\t\t\t\tformeid === '-therian' ||\r\n\t\t\t\tformeid === '-primal' ||\r\n\t\t\t\tformeid === '-eternal' ||\r\n\t\t\t\tbaseSpeciesid === 'kyurem' ||\r\n\t\t\t\tbaseSpeciesid === 'necrozma' ||\r\n\t\t\t\tformeid === '-super' ||\r\n\t\t\t\tformeid === '-unbound' ||\r\n\t\t\t\tformeid === '-midnight' ||\r\n\t\t\t\tformeid === '-school' ||\r\n\t\t\t\tbaseSpeciesid === 'oricorio' ||\r\n\t\t\t\tbaseSpeciesid === 'zygarde'\r\n\t\t\t)) {\r\n\t\t\t\tspriteData.cryurl += formeid;\r\n\t\t\t}\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (options.shiny && mechanicsGen > 1) dir += '-shiny';\r\n\r\n\t\t// April Fool's 2014\r\n\t\tif (window.Config && Config.server && Config.server.afd || options.afd) {\r\n\t\t\tdir = 'afd' + dir;\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t\t// Duplicate code but needed to make AFD tinymax work\r\n\t\t\t// April Fool's 2020\r\n\t\t\tif (isDynamax && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.25;\r\n\t\t\t\tspriteData.h *= 0.25;\r\n\t\t\t\tspriteData.y += -22;\r\n\t\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.5;\r\n\t\t\t\tspriteData.h *= 0.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\r\n\t\t// Mod Cries\r\n\t\tif (options.mod === 'digimon') {\r\n\t\t\tspriteData.cryurl = `sprites/${options.mod}/audio/${toID(species.baseSpecies)}`;\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (animationData[facing + 'f'] && options.gender === 'F') facing += 'f';\r\n\t\tlet allowAnim = !fakeSprite && !Dex.prefs('noanim') && !Dex.prefs('nogif');\r\n\t\tif (allowAnim && spriteData.gen >= 6) spriteData.pixelated = false;\r\n\t\tif (allowAnim && animationData[facing] && spriteData.gen >= 5) {\r\n\t\t\tif (facing.slice(-1) === 'f') name += '-f';\r\n\t\t\tdir = baseDir + 'ani' + dir;\r\n\r\n\t\t\tspriteData.w = animationData[facing].w;\r\n\t\t\tspriteData.h = animationData[facing].h;\r\n\t\t\tspriteData.url += dir + '/' + name + '.gif';\r\n\t\t} else {\r\n\t\t\t// There is no entry or enough data in pokedex-mini.js\r\n\t\t\t// Handle these in case-by-case basis; either using BW sprites or matching the played gen.\r\n\t\t\tif (!fakeSprite) dir = (baseDir || 'gen5') + dir;\r\n\r\n\t\t\t// Gender differences don't exist prior to Gen 4,\r\n\t\t\t// so there are no sprites for it\r\n\t\t\tif (spriteData.gen >= 4 && miscData['frontf'] && options.gender === 'F') {\r\n\t\t\t\tname += '-f';\r\n\t\t\t}\r\n\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t}\r\n\t\t\r\n\t\t//Prioritize animated gifs if exists\r\n\t\tif (this.getSpriteMod(options.mod, id, 'ani-' + (isFront ? 'front' : 'back') + (spriteData.shiny ? '-shiny' : ''), species.exists !== false))\r\n\t\t{\r\n\t\t\tspriteData.url = resourcePrefix + spriteDir + 'ani-' + (isFront ? 'front' : 'back') + (spriteData.shiny ? '-shiny' : '') + \"/\" + name + \".gif\";\r\n\t\t\tspriteData.w = 200;\r\n\t\t\tspriteData.h = 200;\r\n\t\t}\r\n\r\n\t\tif (!options.noScale) {\r\n\t\t\tif (graphicsGen > 4) {\r\n\t\t\t\t// no scaling\r\n\t\t\t} else if (spriteData.isFrontSprite) {\r\n\t\t\t\tspriteData.w *= 2;\r\n\t\t\t\tspriteData.h *= 2;\r\n\t\t\t\tspriteData.y += -16;\r\n\t\t\t} else {\r\n\t\t\t\t// old gen backsprites are multiplied by 1.5x by the 3D engine\r\n\t\t\t\tspriteData.w *= 2 / 1.5;\r\n\t\t\t\tspriteData.h *= 2 / 1.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\tif (spriteData.gen <= 2) spriteData.y += 2;\r\n\t\t}\r\n\t\tif (isDynamax && !options.noScale) {\r\n\t\t\tspriteData.w *= 2;\r\n\t\t\tspriteData.h *= 2;\r\n\t\t\tspriteData.y += -22;\r\n\t\t} else if ((species.isTotem || isDynamax) && !options.noScale) {\r\n\t\t\tspriteData.w *= 1.5;\r\n\t\t\tspriteData.h *= 1.5;\r\n\t\t\tspriteData.y += -11;\r\n\t\t}\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetPokemonIconNum(id: ID, isFemale?: boolean, facingLeft?: boolean) {\r\n\t\tlet num = 0;\r\n\t\tif (window.BattlePokemonSprites?.[id]?.num) {\r\n\t\t\tnum = BattlePokemonSprites[id].num;\r\n\t\t} else if (window.BattlePokedex?.[id]?.num) {\r\n\t\t\tnum = BattlePokedex[id].num;\r\n\t\t}\r\n\t\tif (num < 0) num = 0;\r\n\t\tif (num > 898) num = 0;\r\n\r\n\t\tif (window.BattlePokemonIconIndexes?.[id]) {\r\n\t\t\tnum = BattlePokemonIconIndexes[id];\r\n\t\t}\r\n\r\n\t\tif (isFemale) {\r\n\t\t\tif (['unfezant', 'frillish', 'jellicent', 'meowstic', 'pyroar'].includes(id)) {\r\n\t\t\t\tnum = BattlePokemonIconIndexes[id + 'f'];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (facingLeft) {\r\n\t\t\tif (BattlePokemonIconIndexesLeft[id]) {\r\n\t\t\t\tnum = BattlePokemonIconIndexesLeft[id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn num;\r\n\t}\r\n\r\n\tgetPokemonIcon(pokemon: string | Pokemon | ServerPokemon | PokemonSet | null, facingLeft?: boolean, mod: string = '') {\r\n\t\tif (pokemon === 'pokeball') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -0px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-statused') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -40px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-fainted') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px;opacity:.4;filter:contrast(0)`;\r\n\t\t} else if (pokemon === 'pokeball-none') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px`;\r\n\t\t}\r\n\r\n\t\tlet id = toID(pokemon);\r\n\t\tif (!pokemon || typeof pokemon === 'string') pokemon = null;\r\n\t\t// @ts-ignore\r\n\t\tif (pokemon?.speciesForme) id = toID(pokemon.speciesForme);\r\n\t\t// @ts-ignore\r\n\t\tif (pokemon?.species) id = toID(pokemon.species);\r\n\t\t// @ts-ignore\r\n\t\tif (pokemon?.volatiles?.formechange && !pokemon.volatiles.transform) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tid = toID(pokemon.volatiles.formechange[1]);\r\n\t\t}\r\n\t\tlet num = this.getPokemonIconNum(id, pokemon?.gender === 'F', facingLeft);\r\n\t\tlet top = Math.floor(num / 12) * 30;\r\n\t\tlet left = (num % 12) * 40;\r\n\t\tlet fainted = ((pokemon as Pokemon | ServerPokemon)?.fainted ? `;opacity:.3;filter:grayscale(100%) brightness(.5)` : ``);\r\n\t\tDex.getSpecies(id);\r\n\t\tlet species = window.BattlePokedexAltForms && window.BattlePokedexAltForms[id] ? window.BattlePokedexAltForms[id] : Dex.getSpecies(id);\r\n\t\tmod = this.getSpriteMod(mod, id, 'icons', species.exists !== false);\r\n\t\tif (mod) return `background:transparent url(${this.modResourcePrefix}${mod}/sprites/icons/${id}.png) no-repeat scroll -0px -0px${fainted}`;\r\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png?v4) no-repeat scroll -${left}px -${top}px${fainted}`;\r\n\t}\r\n\r\n\tgetTeambuilderSpriteData(pokemon: any, gen: number = 0, mod: string = ''): TeambuilderSpriteData {\r\n\t\tlet id = toID(pokemon.species);\r\n\t\tlet spriteid = pokemon.spriteid;\r\n\t\tlet species = window.BattlePokedexAltForms && window.BattlePokedexAltForms[id] ? window.BattlePokedexAltForms[id] : Dex.getSpecies(pokemon.species);\r\n\t\tif (pokemon.species && !spriteid) {\r\n\t\t\tspriteid = species.spriteid || toID(pokemon.species);\r\n\t\t}\r\n\t\tif (mod && window.ModConfig[mod].spriteGen) gen = window.ModConfig[mod].spriteGen;\r\n\t\tmod = this.getSpriteMod(mod, id, 'front', species.exists !== false);\r\n\t\tif (mod) {\r\n\t\t\treturn {\r\n\t\t\t\tspriteDir: `${mod}/sprites/front`,\r\n\t\t\t\tspriteid,\r\n\t\t\t\tshiny: (this.getSpriteMod(mod, id, 'front-shiny', species.exists !== false) !== '' && pokemon.shiny),\r\n\t\t\t\tx: 10,\r\n\t\t\t\ty: 5,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (species.exists === false) return {spriteDir: 'sprites/gen5', spriteid: '0', x: 10, y: 5};\r\n\t\tconst spriteData: TeambuilderSpriteData = {\r\n\t\t\tspriteid,\r\n\t\t\tspriteDir: 'sprites/dex',\r\n\t\t\tx: -2,\r\n\t\t\ty: -3,\r\n\t\t};\r\n\t\tif (pokemon.shiny) spriteData.shiny = true;\r\n\t\tif (Dex.prefs('nopastgens')) gen = 6;\r\n\t\tlet xydexExists = (!species.isNonstandard || species.isNonstandard === 'Past') || [\r\n\t\t\t\"pikachustarter\", \"eeveestarter\", \"meltan\", \"melmetal\", \"fidgit\", \"stratagem\", \"tomohawk\", \"mollux\", \"crucibelle\", \"crucibellemega\", \"kerfluffle\", \"pajantom\", \"jumbao\", \"caribolt\", \"smokomodo\", \"snaelstrom\", \"equilibra\", \"astrolotl\", \"scratchet\", \"pluffle\", \"smogecko\", \"pokestarufo\", \"pokestarufo2\", \"pokestarbrycenman\", \"pokestarmt\", \"pokestarmt2\", \"pokestargiant\", \"pokestarhumanoid\", \"pokestarmonster\", \"pokestarf00\", \"pokestarf002\", \"pokestarspirit\",\r\n\t\t].includes(species.id);\r\n\t\tif (species.gen === 8) xydexExists = false;\r\n\t\tif ((!gen || gen >= 6) && xydexExists) {\r\n\t\t\tif (species.gen >= 7) {\r\n\t\t\t\tspriteData.x = -6;\r\n\t\t\t\tspriteData.y = -7;\r\n\t\t\t} else if (id.substr(0, 6) === 'arceus') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 7;\r\n\t\t\t} else if (id === 'garchomp') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 2;\r\n\t\t\t} else if (id === 'garchompmega') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 0;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\t\tspriteData.spriteDir = 'sprites/gen5';\r\n\t\tif (gen <= 1 && species.gen <= 1) spriteData.spriteDir = 'sprites/gen1';\r\n\t\telse if (gen <= 2 && species.gen <= 2) spriteData.spriteDir = 'sprites/gen2';\r\n\t\telse if (gen <= 3 && species.gen <= 3) spriteData.spriteDir = 'sprites/gen3';\r\n\t\telse if (gen <= 4 && species.gen <= 4) spriteData.spriteDir = 'sprites/gen4';\r\n\t\tspriteData.x = 10;\r\n\t\tspriteData.y = 5;\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetTeambuilderSprite(pokemon: any, gen: number = 0, mod: string = '') {\r\n\t\tif (!pokemon) return '';\r\n\t\tconst data = this.getTeambuilderSpriteData(pokemon, gen, mod);\r\n\t\tconst shiny = (data.shiny ? '-shiny' : '');\r\n\t\tlet resourcePrefix = Dex.resourcePrefix;\r\n\t\tif (data.spriteDir.includes('front')) resourcePrefix = Dex.modResourcePrefix;\r\n\t\treturn 'background-image:url(' + resourcePrefix + data.spriteDir + shiny + '/' + data.spriteid + '.png);background-position:' + data.x + 'px ' + data.y + 'px;background-repeat:no-repeat';\r\n\t}\r\n\r\n\tgetItemIcon(item: any, mod: string = '') {\r\n\t\tlet num = 0;\r\n\t\tif (typeof item === 'string' && exports.BattleItems) item = exports.BattleItems[toID(item)];\r\n\t\tmod = this.getSpriteMod(mod, item.id, 'items');\r\n\t\tif (mod) return `background:transparent url(${this.modResourcePrefix}${mod}/sprites/items/${item.id}.png) no-repeat`;\r\n\t\tif (item?.spritenum) num = item.spritenum;\r\n\r\n\t\tlet top = Math.floor(num / 16) * 24;\r\n\t\tlet left = (num % 16) * 24;\r\n\t\treturn 'background:transparent url(' + Dex.resourcePrefix + 'sprites/itemicons-sheet.png?g8) no-repeat scroll -' + left + 'px -' + top + 'px';\r\n\t}\r\n\r\n\tgetTypeIcon(type: string | null, b?: boolean, mod: string = '') { // b is just for utilichart.js\r\n\t\ttype = this.getType(type).name;\r\n\t\tif (!type) type = '???';\r\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\r\n\t\t// console.log(sanitizedType);\r\n\t\tmod = this.getSpriteMod(mod, toID(type), 'types');\r\n\t\tif (mod) {\r\n\t\t\treturn `<img src=\"${this.modResourcePrefix}${mod}/sprites/types/${toID(type)}.png\" alt=\"${type}\" class=\"pixelated${b ? ' b' : ''}\" />`;\r\n\t\t} else {\r\n\t\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/types/${sanitizedType}.png\" alt=\"${type}\" height=\"14\" width=\"32\" class=\"pixelated${b ? ' b' : ''}\" />`;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCategoryIcon(category: string | null) {\r\n\t\tconst categoryID = toID(category);\r\n\t\tlet sanitizedCategory = '';\r\n\t\tswitch (categoryID) {\r\n\t\tcase 'physical':\r\n\t\tcase 'special':\r\n\t\tcase 'status':\r\n\t\t\tsanitizedCategory = categoryID.charAt(0).toUpperCase() + categoryID.slice(1);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tsanitizedCategory = 'undefined';\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/categories/${sanitizedCategory}.png\" alt=\"${sanitizedCategory}\" height=\"14\" width=\"32\" class=\"pixelated\" />`;\r\n\t}\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n};\r\n\r\nclass ModdedDex {\r\n\tgen: number;\r\n\treadonly modid: ID;\r\n\treadonly cache = {\r\n\t\tMoves: {} as any as {[k: string]: Move},\r\n\t\tItems: {} as any as {[k: string]: Item},\r\n\t\tAbilities: {} as any as {[k: string]: Ability},\r\n\t\tSpecies: {} as any as {[k: string]: Species},\r\n\t\tTypes: {} as any as {[k: string]: Effect},\r\n\t};\r\n\tpokeballs: string[] | null = null;\r\n\tconstructor(modid: ID) {\r\n\t\tthis.modid = modid;\r\n\t\t// const table = window.BattleTeambuilderTable[this.modid];\r\n\t\tif (!modid.startsWith('gen')) {\r\n\t\t\tthis.gen = 8;\r\n\t\t} else {\r\n\t\t\tthis.gen = parseInt(modid.slice(3), 10);\r\n\t\t}\r\n\t}\r\n\tgetMove(name: string): Move {\r\n\t\tlet id = toID(name);\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t}\r\n\t\t// if (this.cache.Moves.hasOwnProperty(id)) return this.cache.Moves[id];\r\n\r\n\t\tlet data = {...Dex.getMove(name)};\r\n\r\n\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\tif (table.overrideMoveInfo[id]) {\r\n\t\t\tfor (const key in table.overrideMoveInfo[id]) {\r\n\t\t\t\tdata = {...Dex.getMove(name), ...table.overrideMoveInfo[id]};\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.gen <= 3 && data.category !== 'Status') {\r\n\t\t\tdata.category = Dex.getGen3Category(data.type);\r\n\t\t}\r\n\t\tconst move = new Move(id, name, data);\r\n\t\tthis.cache.Moves[id] = move;\r\n\t\treturn move;\r\n\t}\r\n\tgetItem(name: string): Item {\r\n\t\tlet id = toID(name);\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t}\r\n\t\tif (this.cache.Items.hasOwnProperty(id)) return this.cache.Items[id];\r\n\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\tlet data = {...Dex.getItem(name)};\r\n\t\tif (table.fullItemName && id in table.fullItemName) {\r\n\t\t\tdata.name = table.fullItemName[id];\r\n\t\t\tdata.exists = true;\r\n\t\t}\r\n\t\tif (id in table.overrideItemDesc) data.shortDesc = table.overrideItemDesc[id];\r\n\t\tfor (let i = this.gen; i < 8; i++) {\r\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideItemDesc) {\r\n\t\t\t\tdata.shortDesc = window.BattleTeambuilderTable['gen' + i].overrideItemDesc[id];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst item = new Item(id, name, data);\r\n\t\tthis.cache.Items[id] = item;\r\n\t\treturn item;\r\n\t}\r\n\tgetAbility(name: string): Ability {\r\n\t\tlet id = toID(name);\r\n\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t}\r\n\t\t// if (this.cache.Abilities.hasOwnProperty(id)) return this.cache.Abilities[id];\r\n\t\tlet table = BattleTeambuilderTable[this.modid];\r\n\t\tlet data = {...Dex.getAbility(name)};\r\n\t\tif (table.fullAbilityName && id in table.fullAbilityName) {\r\n\t\t\tdata.name = table.fullAbilityName[id];\r\n\t\t\tdata.exists = true;\r\n\t\t}\r\n\t\tif (id in table.overrideAbilityDesc) {\r\n\t\t\tdata.shortDesc = table.overrideAbilityDesc[id];\r\n\t\t} else {\r\n\t\t\tfor (let i = this.gen; i < 8; i++) {\r\n\t\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideAbilityDesc) {\r\n\t\t\t\t\tdata.shortDesc = window.BattleTeambuilderTable['gen' + i].overrideAbilityDesc[id];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst ability = new Ability(id, name, data);\r\n\t\tthis.cache.Abilities[id] = ability;\r\n\t\treturn ability;\r\n\t}\r\n\tgetSpecies(name: string, hasData = true, debug = \"\"): Species {\r\n\t\tlet id = toID(name);\r\n\t\tlet formid = id;\r\n\t\t// if (debug) console.log(\"getSpecies (ModdedDex): \" + debug + ' ' + id);\r\n\t\tif (name.includes('-')) this.getSpecies(name.split('-')[0]);\r\n\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\tif (!table.BattlePokedexAltForms) table.BattlePokedexAltForms = {};\r\n\t\tif (formid in table.BattlePokedexAltForms) {\r\n\t\t\treturn table.BattlePokedexAltForms[formid];\r\n\t\t}\r\n\t\tif (!table.BattleBaseSpeciesChart) table.BattleBaseSpeciesChart = [];\r\n\t\tif (window.BattleAliases && id in BattleAliases && !table.overrideDexInfo[id]) {\r\n\t\t\tname = BattleAliases[id];\r\n\t\t\tid = toID(name);\r\n\t\t} else if (table.overrideDexInfo && !(id in table.overrideDexInfo) && table.BattleBaseSpeciesChart) {\r\n\t\t\tfor (const baseSpeciesId of table.BattleBaseSpeciesChart) {\r\n\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\r\n\t\t\t\t\tid = baseSpeciesId;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if (this.cache.Species.hasOwnProperty(id)) return this.cache.Species[id];\r\n\t\tlet data = {};\r\n\t\tif (hasData) {\r\n\t\t\tdata = {...Dex.getSpecies(name, true, \"from moddedDex: getSpecies 1\")};\r\n\t\t\tif (table.overrideDexInfo && table.overrideDexInfo[id]) {\r\n\t\t\t\tdata = {...Dex.getSpecies(name, true, \"from moddedDex: getSpecies 2\"), ...table.overrideDexInfo[id]};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (table.overrideDexInfo && table.overrideDexInfo[id]) {\r\n\t\t\t\tdata = {...table.overrideDexInfo[id]};\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.gen < 3) {\r\n\t\t\tdata.abilities = {0: \"None\"};\r\n\t\t}\r\n\r\n\t\tif (id in table.overrideTier) data.tier = table.overrideTier[id];\r\n\t\tif (!data.tier && id.slice(-5) === 'totem') {\r\n\t\t\tdata.tier = this.getSpecies(id.slice(0, -5)).tier;\r\n\t\t}\r\n\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\tdata.tier = this.getSpecies(data.baseSpecies).tier;\r\n\t\t}\r\n\t\tif (data.cosmeticFormes) {\r\n\t\t\tif (!table.BattleBaseSpeciesChart.includes(id)) table.BattleBaseSpeciesChart.push(id);\r\n\t\t\tfor (const forme of data.cosmeticFormes) {\r\n\t\t\t\tif (toID(forme) === formid) {\r\n\t\t\t\t\tdata = new Species(formid, name, {\r\n\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\tname: forme,\r\n\t\t\t\t\t\tforme: forme.slice(data.name.length + 1),\r\n\t\t\t\t\t\tbaseForme: \"\",\r\n\t\t\t\t\t\tbaseSpecies: data.name,\r\n\t\t\t\t\t\totherFormes: null,\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttable.BattlePokedexAltForms[formid] = data;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (data.gen > this.gen) data.tier = 'Illegal';\r\n\t\tconst species = new Species(id, name, data);\r\n\t\tthis.cache.Species[id] = species;\r\n\t\treturn species;\r\n\t}\r\n\tgetType(name: string): Effect {\r\n\t\tlet id = toID(name) as string;\r\n\t\tid = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\r\n\t\t// if (this.cache.Types.hasOwnProperty(id)) return this.cache.Types[id];\r\n\r\n\t\tlet data = {...Dex.getType(name)};\r\n\r\n\t\tfor (let i = 7; i >= this.gen; i--) {\r\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].removeType) {\r\n\t\t\t\tdata.exists = false;\r\n\t\t\t\t// don't bother correcting its attributes given it doesn't exist\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideTypeChart) {\r\n\t\t\t\tdata = {...data, ...window.BattleTeambuilderTable['gen' + i].overrideTypeChart[id]};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.cache.Types[id] = data;\r\n\t\treturn data;\r\n\t}\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\r\n\t\t\tif (data.gen && data.gen > this.gen) continue;\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Dex = Dex;\r\n\t(global as any).toID = toID;\r\n}\r\n"],"file":"battle-dex.js"}